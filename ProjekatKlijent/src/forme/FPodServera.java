/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import komunikacija.Komunikacija;
import konfiguracija.KonfiguracijaKlijenta;
import transfer.KlijentTransferObjekat;

/**
 *
 * @author Joca
 */
public class FPodServera extends javax.swing.JFrame {

    /**
     * Creates new form FPodServera
     */
    public FPodServera() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnDBPoveziSe = new javax.swing.JButton();
        jbtnDBTestirajKonekciju = new javax.swing.JButton();
        jlblDBStatus = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jtxtDBPort = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jtxtDBIPAdresa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbtnDBPoveziSe.setText("Povezi se");
        jbtnDBPoveziSe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDBPoveziSeActionPerformed(evt);
            }
        });

        jbtnDBTestirajKonekciju.setText("Testiraj konekciju");
        jbtnDBTestirajKonekciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDBTestirajKonekcijuActionPerformed(evt);
            }
        });

        jlblDBStatus.setText(" ");

        jLabel20.setText("Status: ");

        jLabel17.setText("Port:");

        jLabel16.setText("IP adresa:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(38, 38, 38)
                        .addComponent(jlblDBStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jbtnDBPoveziSe)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                            .addComponent(jbtnDBTestirajKonekciju))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtxtDBIPAdresa, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                .addComponent(jtxtDBPort)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jtxtDBIPAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jtxtDBPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnDBPoveziSe)
                    .addComponent(jbtnDBTestirajKonekciju))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblDBStatus)
                    .addComponent(jLabel20))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnDBPoveziSeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDBPoveziSeActionPerformed
        // TODO add your handling code here:
        int port;
        String ipAdresa;
        if (!jtxtDBIPAdresa.getText().trim().isEmpty()) {
            ipAdresa = jtxtDBIPAdresa.getText().trim();
            jlblDBStatus.setText("");
        } else {
            jlblDBStatus.setText("Unesite IP adresu");
            return;
        }
        if (!jtxtDBPort.getText().trim().isEmpty()) {
            try {
                port = Integer.parseInt(jtxtDBPort.getText().trim());
                jlblDBStatus.setText("");
            } catch (NumberFormatException ex) {
                ex.printStackTrace();
                jlblDBStatus.setText("Unesite ispravno broj porta");
                return;
            }
        } else {
            jlblDBStatus.setText("Unesite broj porta");
            return;
        }
        try {
            Socket soket = new Socket(ipAdresa, port);
            BufferedReader in = new BufferedReader(new InputStreamReader(soket.getInputStream()));
            String poruka = in.readLine();
            if (poruka != null) {
                if (poruka.equals("ok")) {
                    jlblDBStatus.setText("Uspesna konekcija");
                    KonfiguracijaKlijenta.vratiInstancu().postaviPodesenServer("t");
                    KonfiguracijaKlijenta.vratiInstancu().postaviIPAdresu(ipAdresa);
                    KonfiguracijaKlijenta.vratiInstancu().postaviPort(port + "");

                    Komunikacija.getInstanca().setSoket(soket);
                    this.dispose();
                    new FGlavna().setVisible(true);

                    //                    
                }
            } else {
                System.out.println("poruka o konekciji je null");
                jlblDBStatus.setText("Neuspesna konekcija");
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            jlblDBStatus.setText("Neuspesna konekcija");
        }
    }//GEN-LAST:event_jbtnDBPoveziSeActionPerformed

    private void jbtnDBTestirajKonekcijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDBTestirajKonekcijuActionPerformed
        // TODO add your handling code here:
        int port;
        String ipAdresa;
        if (!jtxtDBIPAdresa.getText().trim().isEmpty()) {
            ipAdresa = jtxtDBIPAdresa.getText().trim();
            jlblDBStatus.setText("");
        } else {
            jlblDBStatus.setText("Unesite IP adresu");
            return;
        }
        if (!jtxtDBPort.getText().trim().isEmpty()) {
            try {
                port = Integer.parseInt(jtxtDBPort.getText().trim());
                jlblDBStatus.setText("");
            } catch (NumberFormatException ex) {
                ex.printStackTrace();
                jlblDBStatus.setText("Unesite ispravno broj porta");
                return;
            }
        } else {
            jlblDBStatus.setText("Unesite broj porta");
            return;
        }
        try {
            Socket soket = new Socket(ipAdresa, port);
            BufferedReader in = new BufferedReader(new InputStreamReader(soket.getInputStream()));

            String poruka = in.readLine();
            if (poruka != null) {
                if (poruka.equals("ok")) {
                    jlblDBStatus.setText("Uspesna konekcija");
                    //                    soket.close();
                    if (Komunikacija.getInstanca().daLiJePovezan()) {
                        KlijentTransferObjekat kto = new KlijentTransferObjekat();
                        kto.setOperacija(konstante.Konstante.KRAJ);
                        try {
                            komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }
                    }

                }
            } else {
                System.out.println("poruka o konekciji je null");
                jlblDBStatus.setText("Neuspesna konekcija");
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            jlblDBStatus.setText("Neuspesna konekcija");
        }
    }//GEN-LAST:event_jbtnDBTestirajKonekcijuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPodServera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPodServera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPodServera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPodServera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPodServera().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JButton jbtnDBPoveziSe;
    private javax.swing.JButton jbtnDBTestirajKonekciju;
    private javax.swing.JLabel jlblDBStatus;
    private javax.swing.JTextField jtxtDBIPAdresa;
    private javax.swing.JTextField jtxtDBPort;
    // End of variables declaration//GEN-END:variables
}
