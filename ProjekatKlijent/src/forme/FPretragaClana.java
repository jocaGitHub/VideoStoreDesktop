/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Clan;
import domen.Zaduzenje;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import kontroleri.KontrolerKomunikacije;
import modeli.ModelTabeleSviClanovi;

/**
 *
 * @author Joca
 */
public class FPretragaClana extends javax.swing.JDialog {

    List<Clan> listaClanova;
    FGlavna glavna;

    /**
     * Creates new form FPretragaClana
     */
    public FPretragaClana(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        glavna = (FGlavna) parent;
        popuniTabelu();
        Rectangle bounds = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();
        this.setBounds(bounds);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnGroupKriterijum = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jtxtKriterijum = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblClanovi = new javax.swing.JTable();
        jbtnDetalji = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jbtnDodajNovog = new javax.swing.JButton();
        jbtnUkloniFilter = new javax.swing.JButton();
        jlblInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Unesite ime ili prezime za pretragu clana");

        jtxtKriterijum.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jtxtKriterijumInputMethodTextChanged(evt);
            }
        });
        jtxtKriterijum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtKriterijumKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtKriterijumKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtKriterijumKeyTyped(evt);
            }
        });

        jtblClanovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblClanovi);

        jbtnDetalji.setText("Detalji");
        jbtnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDetaljiActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("Obrisi");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jbtnDodajNovog.setText("Dodaj novog");
        jbtnDodajNovog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajNovogActionPerformed(evt);
            }
        });

        jbtnUkloniFilter.setText("Ukloni filter");
        jbtnUkloniFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUkloniFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnDetalji, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnDodajNovog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnUkloniFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jlblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnUkloniFilter))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jbtnDetalji)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnDodajNovog))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        //sta ako clan ima zaduzenjeeee!!!!!!!!!!!!!!!
        int rbr = jtblClanovi.getSelectedRow();
        if (rbr < 0) {
            JOptionPane.showMessageDialog(this, "niste selektovali clana kojeg biste da obrisete");
        } else {
            Clan c = ((ModelTabeleSviClanovi) jtblClanovi.getModel()).vratiClana(rbr);
            boolean b = KontrolerKomunikacije.obrisiClana(c, this);
            if (b == true) {
                ((ModelTabeleSviClanovi) jtblClanovi.getModel()).obrisi(rbr);
                JOptionPane.showMessageDialog(this, "uspesno je obrisan clan");
            } else {
                JOptionPane.showMessageDialog(this, "niste uspeli da obrisete clana");
            }

        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnDodajNovogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajNovogActionPerformed
        glavna.otvoriDijalogZaDodavanjeNovogClana(this);

    }//GEN-LAST:event_jbtnDodajNovogActionPerformed

    private void jbtnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDetaljiActionPerformed
        int rbr = jtblClanovi.getSelectedRow();
        if (rbr < 0) {
            JOptionPane.showMessageDialog(this, "morate prvo selektovati clana");
        } else {
            Clan c = ((ModelTabeleSviClanovi) jtblClanovi.getModel()).vratiClana(rbr);
            glavna.pokreniDijalog(c, this);
        }

    }//GEN-LAST:event_jbtnDetaljiActionPerformed

    private void jtxtKriterijumInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtxtKriterijumInputMethodTextChanged
        if (jtxtKriterijum.getText().trim().isEmpty()) {
            jtblClanovi.setModel(new ModelTabeleSviClanovi(listaClanova));
        } else {
            String pretraga = jtxtKriterijum.getText().trim();
            List<Clan> zaPretragu = new ArrayList<>();
            for (Clan fff : listaClanova) {
                zaPretragu.add(fff);
            }
            List<Clan> novaLista = new ArrayList<>();
            
            for (Clan f : zaPretragu) {
                if (f.getIme().contains(pretraga) || f.getPrezime().contains(pretraga)) {

                } else {
                    novaLista.add(f);
                }
            }
            for (Clan ff : novaLista) {
                zaPretragu.remove(ff);
            }
            if (zaPretragu.size() == 0) {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(new ArrayList<>()));
                jlblInfo.setText("ne postoji clan sa takvim imenom ni prezimenom");
            } else {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(zaPretragu));
                jlblInfo.setText("");
            }

        }
    }//GEN-LAST:event_jtxtKriterijumInputMethodTextChanged

    private void jtxtKriterijumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKriterijumKeyPressed
        if (jtxtKriterijum.getText().trim().isEmpty()) {
            jtblClanovi.setModel(new ModelTabeleSviClanovi(listaClanova));
        } else {
            String pretraga = jtxtKriterijum.getText().trim();
            List<Clan> zaPretragu = new ArrayList<>();
            for (Clan fff : listaClanova) {
                zaPretragu.add(fff);
            }
            List<Clan> novaLista = new ArrayList<>();
            
            for (Clan f : zaPretragu) {
                if (f.getIme().contains(pretraga) || f.getPrezime().contains(pretraga)) {

                } else {
                    novaLista.add(f);
                }
            }
            for (Clan ff : novaLista) {
                zaPretragu.remove(ff);
            }
            if (zaPretragu.size() == 0) {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(new ArrayList<>()));
                jlblInfo.setText("ne postoji clan sa takvim imenom ni prezimenom");
                JOptionPane.showMessageDialog(this, "sistem ne moze da nadje clana po zadatim vrednostima");
            } else {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(zaPretragu));
                jlblInfo.setText("");
            }

        }

    }//GEN-LAST:event_jtxtKriterijumKeyPressed

    private void jbtnUkloniFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUkloniFilterActionPerformed
        jtxtKriterijum.setText("");
        jlblInfo.setText("");
        jtblClanovi.setModel(new ModelTabeleSviClanovi(listaClanova));
    }//GEN-LAST:event_jbtnUkloniFilterActionPerformed

    private void jtxtKriterijumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKriterijumKeyTyped
        if (jtxtKriterijum.getText().trim().isEmpty()) {
            jtblClanovi.setModel(new ModelTabeleSviClanovi(listaClanova));
        } else {
            String pretraga = jtxtKriterijum.getText().trim();
            List<Clan> zaPretragu = new ArrayList<>();
            for (Clan fff : listaClanova) {
                zaPretragu.add(fff);
            }
            List<Clan> novaLista = new ArrayList<>();
            
            for (Clan f : zaPretragu) {
                if (f.getIme().contains(pretraga) || f.getPrezime().contains(pretraga)) {

                } else {
                    novaLista.add(f);
                }
            }
            for (Clan ff : novaLista) {
                zaPretragu.remove(ff);
            }
            if (zaPretragu.size() == 0) {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(new ArrayList<>()));
                jlblInfo.setText("ne postoji clan sa takvim imenom ni prezimenom");
            } else {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(zaPretragu));
                jlblInfo.setText("");
            }

        }
    }//GEN-LAST:event_jtxtKriterijumKeyTyped

    private void jtxtKriterijumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKriterijumKeyReleased
         if (jtxtKriterijum.getText().trim().isEmpty()) {
            jtblClanovi.setModel(new ModelTabeleSviClanovi(listaClanova));
        } else {
            String pretraga = jtxtKriterijum.getText().trim();
            List<Clan> zaPretragu = new ArrayList<>();
            for (Clan fff : listaClanova) {
                zaPretragu.add(fff);
            }
            List<Clan> novaLista = new ArrayList<>();
            
            for (Clan f : zaPretragu) {
                if (f.getIme().contains(pretraga) || f.getPrezime().contains(pretraga)) {

                } else {
                    novaLista.add(f);
                }
            }
            for (Clan ff : novaLista) {
                zaPretragu.remove(ff);
            }
            if (zaPretragu.size() == 0) {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(new ArrayList<>()));
                jlblInfo.setText("ne postoji clan sa takvim imenom ni prezimenom");
            } else {
                jtblClanovi.setModel(new ModelTabeleSviClanovi(zaPretragu));
                jlblInfo.setText("");
            }

        }
    }//GEN-LAST:event_jtxtKriterijumKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPretragaClana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPretragaClana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPretragaClana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPretragaClana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FPretragaClana dialog = new FPretragaClana(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDetalji;
    private javax.swing.JButton jbtnDodajNovog;
    private javax.swing.ButtonGroup jbtnGroupKriterijum;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JButton jbtnUkloniFilter;
    private javax.swing.JLabel jlblInfo;
    private javax.swing.JTable jtblClanovi;
    private javax.swing.JTextField jtxtKriterijum;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        listaClanova = KontrolerKomunikacije.vratiListuClanova(this);
        if (listaClanova != null) {
            jtblClanovi.setModel(new ModelTabeleSviClanovi(listaClanova));
        } else {
            System.out.println("nije uspeo da uzme clanove");
        }
    }
}
