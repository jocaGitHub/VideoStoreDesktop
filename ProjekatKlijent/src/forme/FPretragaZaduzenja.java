/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Radnici;
import domen.Zaduzenje;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import kontroleri.KontrolerKomunikacije;
import modeli.ModelTabeleZaduzenja;

/**
 *
 * @author Joca
 */
public class FPretragaZaduzenja extends javax.swing.JDialog {

    List<Zaduzenje> listaZaduzenja;

    /**
     * Creates new form FPretragaZaduzenja
     */
    public FPretragaZaduzenja(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        popuniTabelu();
        popuniCombo();
        Rectangle bounds = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();
        this.setBounds(bounds);
        jpanelDodatno.setVisible(false);
        jbtnIzmeniStatus.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtxtVrednostPretrage = new javax.swing.JTextField();
        jcombo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblZaduzenja = new javax.swing.JTable();
        jbtnIzmeniStatus = new javax.swing.JButton();
        jpanelDodatno = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtxtDatum = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jbtnUkloniFilter = new javax.swing.JButton();
        jlblInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Kriterijum pretrage:");

        jLabel2.setText("Vrednost za pretragu:");

        jtxtVrednostPretrage.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jtxtVrednostPretrageInputMethodTextChanged(evt);
            }
        });
        jtxtVrednostPretrage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtVrednostPretrageKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtVrednostPretrageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtVrednostPretrageKeyTyped(evt);
            }
        });

        jcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jtblZaduzenja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblZaduzenja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblZaduzenjaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblZaduzenja);

        jbtnIzmeniStatus.setText("Izmeni status");
        jbtnIzmeniStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzmeniStatusActionPerformed(evt);
            }
        });

        jLabel3.setText("Unesite datum razduzenja:");

        jButton1.setText("Izmeni");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanelDodatnoLayout = new javax.swing.GroupLayout(jpanelDodatno);
        jpanelDodatno.setLayout(jpanelDodatnoLayout);
        jpanelDodatnoLayout.setHorizontalGroup(
            jpanelDodatnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelDodatnoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jtxtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1)
                .addGap(27, 27, 27))
        );
        jpanelDodatnoLayout.setVerticalGroup(
            jpanelDodatnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelDodatnoLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jpanelDodatnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jbtnUkloniFilter.setText("UkloniFilter");
        jbtnUkloniFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUkloniFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtxtVrednostPretrage)
                                    .addComponent(jcombo, 0, 214, Short.MAX_VALUE)))
                            .addComponent(jpanelDodatno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtnIzmeniStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(jbtnUkloniFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jlblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtxtVrednostPretrage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnUkloniFilter)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jbtnIzmeniStatus)
                        .addGap(200, 200, 200))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jpanelDodatno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnIzmeniStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzmeniStatusActionPerformed
        int rbr = jtblZaduzenja.getSelectedRow();
        if (rbr < 0) {
            JOptionPane.showMessageDialog(this, "selektujte prvo zaduzenje koje biste da izmenite");
        } else {
            if (((ModelTabeleZaduzenja) jtblZaduzenja.getModel()).vratiZaduzenje(rbr).isStatusZaduzenja().equals("vraceno")) {
                JOptionPane.showMessageDialog(this, "odabrano zaduzenje je vec obradjeno i vraceno");
            } else {
                jpanelDodatno.setVisible(true);
//                jbtnObrisi.setEnabled(false);
            }

        }

    }//GEN-LAST:event_jbtnIzmeniStatusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Zaduzenje z = ((ModelTabeleZaduzenja) jtblZaduzenja.getModel()).vratiZaduzenje(jtblZaduzenja.getSelectedRow());
        Date datum = null;
        String datumS = null;
        if (jtxtDatum.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "niste uneli datum razduzenja");
            return;
        } else {
            datumS = jtxtDatum.getText().trim();
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        try {
            datum = sdf.parse(datumS);
            z.setDatumRazduzenja(datum);
            z.setStatusZaduzenja("vraceno");
            z.setRazduzio((Radnici) sesija.Sesija.vratiInstancu().getMapa().get("radnik"));
            boolean b = KontrolerKomunikacije.sacuvajZaduzenje(z, this);
            if (b == true) {
                List<Zaduzenje> listaZaduzenja = KontrolerKomunikacije.uzmiZaduzenja(this);
                jtblZaduzenja.setModel(new ModelTabeleZaduzenja(listaZaduzenja));
                jpanelDodatno.setVisible(false);
//                jbtnObrisi.setEnabled(true);
                JOptionPane.showMessageDialog(this, "uspesno ste izmenili zaduzenje");
            } else {
//                JOptionPane.showMessageDialog(this, "niste uspeli da sacuvate");
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "unesite datum u formatu dd/MM/yyyy");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtblZaduzenjaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblZaduzenjaMouseClicked
        if (jtblZaduzenja.getSelectedRow() >= 0) {
            jbtnIzmeniStatus.setVisible(true);
        }
    }//GEN-LAST:event_jtblZaduzenjaMouseClicked

    private void jtxtVrednostPretrageInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtxtVrednostPretrageInputMethodTextChanged
        

    }//GEN-LAST:event_jtxtVrednostPretrageInputMethodTextChanged

    private void jbtnUkloniFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUkloniFilterActionPerformed
        jtxtVrednostPretrage.setText("");
        jlblInfo.setText("");
        jtblZaduzenja.setModel(new ModelTabeleZaduzenja(listaZaduzenja));
        
    }//GEN-LAST:event_jbtnUkloniFilterActionPerformed

    private void jtxtVrednostPretrageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtVrednostPretrageKeyPressed
        if (jtxtVrednostPretrage.getText().trim().isEmpty()) {
            jtblZaduzenja.setModel(new ModelTabeleZaduzenja(listaZaduzenja));
        } else {
            String pretraga = jtxtVrednostPretrage.getText().trim();
            List<Zaduzenje> zaPretragu = new ArrayList<>();
            for (Zaduzenje fff : listaZaduzenja) {
                zaPretragu.add(fff);
            }
            List<Zaduzenje> novaLista = new ArrayList<>();
            if (jcombo.getSelectedIndex() == 0) {
                for (Zaduzenje f : zaPretragu) {
                    if (f.getKopija().getFilm().getNaziv().contains(pretraga)) {
                        
                    } else {
                        novaLista.add(f);
                    }
                }
                for (Zaduzenje ff : novaLista) {
                    zaPretragu.remove(ff);
                }
                if (zaPretragu.size() == 0) {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(new ArrayList<>()));
                    jlblInfo.setText("ne postoji zaduzenje za film sa tim nazivom");
                } else {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(zaPretragu));
                }

            } else {
                for (Zaduzenje f : zaPretragu) {
                    if (f.getZaduzenjeID().contains(pretraga)) {
                        
                    } else {
                        novaLista.add(f);
                    }
                }
                for (Zaduzenje ff : novaLista) {
                    zaPretragu.remove(ff);
                }
                if (zaPretragu.size() == 0) {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(new ArrayList<>()));
                    jlblInfo.setText("ne postoji zaduzenje za film sa tim nazivom");
                    
                } else {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(zaPretragu));
                    jlblInfo.setText("");
                }
            }

        }
    }//GEN-LAST:event_jtxtVrednostPretrageKeyPressed

    private void jtxtVrednostPretrageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtVrednostPretrageKeyReleased
        if (jtxtVrednostPretrage.getText().trim().isEmpty()) {
            jtblZaduzenja.setModel(new ModelTabeleZaduzenja(listaZaduzenja));
        } else {
            String pretraga = jtxtVrednostPretrage.getText().trim();
            List<Zaduzenje> zaPretragu = new ArrayList<>();
            for (Zaduzenje fff : listaZaduzenja) {
                zaPretragu.add(fff);
            }
            List<Zaduzenje> novaLista = new ArrayList<>();
            if (jcombo.getSelectedIndex() == 0) {
                for (Zaduzenje f : zaPretragu) {
                    if (f.getKopija().getFilm().getNaziv().contains(pretraga)) {
                        
                    } else {
                        novaLista.add(f);
                    }
                }
                for (Zaduzenje ff : novaLista) {
                    zaPretragu.remove(ff);
                }
                if (zaPretragu.size() == 0) {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(new ArrayList<>()));
                    jlblInfo.setText("ne postoji zaduzenje za film sa tim nazivom");
                    JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nadje takvo zaduzenje");
                } else {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(zaPretragu));
                    jlblInfo.setText("");
                }

            } else {
                for (Zaduzenje f : zaPretragu) {
                    if (f.getZaduzenjeID().contains(pretraga)) {
                        
                    } else {
                        novaLista.add(f);
                    }
                }
                for (Zaduzenje ff : novaLista) {
                    zaPretragu.remove(ff);
                }
                if (zaPretragu.size() == 0) {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(new ArrayList<>()));
                    jlblInfo.setText("ne postoji zaduzenje za film sa tim nazivom");
                } else {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(zaPretragu));
                    jlblInfo.setText("");
                }
            }

        }
    }//GEN-LAST:event_jtxtVrednostPretrageKeyReleased

    private void jtxtVrednostPretrageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtVrednostPretrageKeyTyped
        if (jtxtVrednostPretrage.getText().trim().isEmpty()) {
            jtblZaduzenja.setModel(new ModelTabeleZaduzenja(listaZaduzenja));
        } else {
            String pretraga = jtxtVrednostPretrage.getText().trim();
            List<Zaduzenje> zaPretragu = new ArrayList<>();
            for (Zaduzenje fff : listaZaduzenja) {
                zaPretragu.add(fff);
            }
            List<Zaduzenje> novaLista = new ArrayList<>();
            if (jcombo.getSelectedIndex() == 0) {
                for (Zaduzenje f : zaPretragu) {
                    if (f.getKopija().getFilm().getNaziv().contains(pretraga)) {
                        
                    } else {
                        novaLista.add(f);
                    }
                }
                for (Zaduzenje ff : novaLista) {
                    zaPretragu.remove(ff);
                }
                if (zaPretragu.size() == 0) {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(new ArrayList<>()));
                    jlblInfo.setText("ne postoji zaduzenje za film sa tim nazivom");
                } else {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(zaPretragu));
                }

            } else {
                for (Zaduzenje f : zaPretragu) {
                    if (f.getZaduzenjeID().contains(pretraga)) {
                        
                    } else {
                        novaLista.add(f);
                    }
                }
                for (Zaduzenje ff : novaLista) {
                    zaPretragu.remove(ff);
                }
                if (zaPretragu.size() == 0) {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(new ArrayList<>()));
                    jlblInfo.setText("ne postoji zaduzenje za film sa tim nazivom");
                } else {
                    jtblZaduzenja.setModel(new ModelTabeleZaduzenja(zaPretragu));
                }
            }

        }
    }//GEN-LAST:event_jtxtVrednostPretrageKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPretragaZaduzenja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPretragaZaduzenja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPretragaZaduzenja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPretragaZaduzenja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FPretragaZaduzenja dialog = new FPretragaZaduzenja(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnIzmeniStatus;
    private javax.swing.JButton jbtnUkloniFilter;
    private javax.swing.JComboBox jcombo;
    private javax.swing.JLabel jlblInfo;
    private javax.swing.JPanel jpanelDodatno;
    private javax.swing.JTable jtblZaduzenja;
    private javax.swing.JTextField jtxtDatum;
    private javax.swing.JTextField jtxtVrednostPretrage;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        listaZaduzenja = KontrolerKomunikacije.uzmiZaduzenja(this);
        System.out.println(listaZaduzenja.get(0).getKopija().getFilm().getNaziv());
        if (listaZaduzenja != null) {
            jtblZaduzenja.setModel(new ModelTabeleZaduzenja(listaZaduzenja));
        } else {
            System.out.println("nije uspeo da uzme zaduzenja");
        }
    }

    private void popuniCombo() {
        jcombo.removeAllItems();
        jcombo.addItem("Naziv filma");
        jcombo.addItem("ZaduzenjeID");
    }
}
